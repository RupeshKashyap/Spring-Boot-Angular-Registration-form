package com.example.RegistrationApplication.controller;
import java.util.List;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;


import com.example.RegistrationApplication.model.UserInfo;
import com.example.RegistrationApplication.service.RegistrationService;

@RestController
@RequestMapping("/registration")
public class RegistrationController {
	
	@Autowired 
	RegistrationService registrationService;
	
	@GetMapping()
	public ResponseEntity getAllUser() {

		List list =  (List)registrationService.getAllUser();
		
		if(!list.isEmpty())
		return ResponseEntity.ok(list);
		
		return ResponseEntity.noContent().build();
	}
	@CrossOrigin
	@PostMapping()
	public ResponseEntity saveUser(@RequestBody UserInfo userInfo) {
		System.out.println("userinfo = > "+userInfo);
		UserInfo  user =  registrationService.save(userInfo);
		
		return ResponseEntity.ok(user);
		
	}
	
	@GetMapping(value = "{id}")
	public ResponseEntity getUserById(@PathVariable("id")Integer id) {
		
		UserInfo  user =  registrationService.getUserById(id);
		if(user != null)
		return ResponseEntity.ok(user);
		
		return ResponseEntity.noContent().build();
		
	}
	
	
	@DeleteMapping(value ="{id}")
	public ResponseEntity deleteUser(@PathVariable("id") Integer id){
		
		 registrationService.deleteUser(id);
		
		return ResponseEntity.ok().build();
	}
	
	
	@PutMapping()
	public ResponseEntity updateUser(@RequestBody UserInfo userInfo) {
		
		UserInfo  user =  registrationService.save(userInfo);
		
		return ResponseEntity.ok(user);
	}
	

}
